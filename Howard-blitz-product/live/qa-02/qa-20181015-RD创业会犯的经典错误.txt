大家早上好

我又来了

因为刚才宅色夫

我刚刚直播要大家给意见

然后宅色夫就给我一点意见

他说他想要再听一些

想要再知道一些内幕

我就想说我可以写一些Scaling的故事

还有一些我曾经失败故事

然后不然大家都觉得
我过太爽

人生太成功

没有失败

然后我就想一下

我其实就走了很多很多的冤枉路

我其实这个题目想要命名为

RD创业遇到的冤枉路

我干的99件蠢事情有

没有99件 十几件

我刚刚列了大概十几个标题

就一个一个讲

首先我觉得
反正我创业以来

因为我以前也只会写code

只会做产品也不会做生意

然后想要出去做创业

我第一次出去创业

2012年到现在六年

我觉得这六年

基本上是一个unlearn的过程

就是所有我在RD世界学的

best practice

在这六年以来都崩解了

这个就是我曾经信奉的信仰

在我创业的时候全部都崩解了

最痛苦的是我以前就是写code大神

然后这些世界在我面前崩解

我意识到我以前学的都是错的

我在Team里面

跟我带的RD里面讲

我以前讲的都是错的的时候

他们不相信

比如我跟他们说

我不太注重code的质量

创业赶快他妈先上

他们就会觉得是我当时

写code写得不太好

才会讲这种反常识的话

但是我要跟各位说

我还有说创业
刚开始就不需要

注重scaling

然后code quality好不重要

大家听到这些都很震惊

就觉得我当年的功力是不是假的

我跟你说老子要是没功力的话

他妈闪电战不可能打下

你看info那个量

OTCBTC量是多恐怖

好那只是我选择不scaling而已

选择不scaling

我觉得RD创业最大的一个问题

就是他会把
之前上班的时候学到的

best practice带到

创业的观念里面

这件事情是最恐怖的

因为RD 是一个工种
怎么样讲

Software Engineer的工种

它是一个特殊阶段

你才会 hire进去

也就是说你那些通常你是写code

写的 senior engineer你是大师

然后才会出来创业

你对于scale有这件事情

就基本上mastering了

才会出来玩

这个就有一点问题

你那时候采取的最大策略

是这个生意现金流已经稳定的时候

采取的最大策略

如果你还让他一直失火的话

就是你的失职

所以你当高级的manager

你当RD头

所以你注重是怎么样

平时是

所以你就注重code要写得很好

做code做要写得很好

就是必须要在你

生意要有 revene

然后你并没有生死存亡
的压力的时候

然后做 scaling 把code写好

这件事情也会很花时间

但创业从0到1的时候

其实时间资源是很贵的

也就是你根本没有时间

重点是在于你做出有没有价值的东西

对于很多人来说

其实对大多数100%的人来说

有时候做创业有点像是写一个东西

有点像是一个赌博

你可能你写的可能

只是自己有用到

但是别人可能没用到

或者说你想要scale 到很大的族群

这件事情完全是碰运气

但是这有点像是

是不是

你如果一开始就写很漂亮的code

你等于是allin在一个

很容易GG的选项

里面最重点就是人有那个效应

它倾向于相信
它一开始的决策是对的

所以你既然allin了你的时间

你花了两个月的时间写的那个code

你就不太愿意相信当初的选择是错的

所以你会在错的

选择决定上

一再迭代

希望它是正确的

然后所以最后大家创业失败

我看到很多RD创业失败

他觉得他做的产品这个很好

然后他code也写得很漂亮

他花了很多时间筹备

但为什么不起来

反复迭代了六个月

事实上反而是
那些你觉得他不太会写code

的创业家

或是会写code
但是他跟你说不需要写code的

创业家还用Landing Page就赚到一大堆钱

所以这很反直觉

因为你没有办法相信

你练了多年的武功是没毛用的

对创业

这世界是没毛用的

我跟你说我当时打击也很大

我发现我以前想要创业

但是我不会写code

我就去学写code

然后又写code

然后练了多年之后

我终于变成了高手

所以我要出去创业

创业以后发现我学那么多年code

他妈一点毛用都没有

我是很崩溃的

接下来的六年

我是基本上是一直在

忘记我曾经学到的东西

那些东西会害死你

这个是Over Engineering

我觉得这个是RD创业
最会带来冤枉路

所以你看那些

你看那些国外创业成功的

YC投的那些start up

Founder都有一个特点

要么他不会写code

要么他不会写code

要么他会写一点点code

你就会觉得

但是那种code高手都不会创业成功

RD 写code高手都不会是创业成功的

那些人

你就知道为什么

因为他们脑袋里面

根本就没有那个包袱

就是有强大的demand

然后他们就先干

先干了再说

像Github 他们 它们也承认他们里面

之前没有Git的高手

然后就是搭了一个服务

然后之后才找Git高手进来

因为Github实力很强

我认识Github里面的RD

他说早期Github里面code也就是

也烂的要死

大家觉得Github是

程序员脑子里面的圣殿

但是早期的code

基本上也是惨不忍睹

我去硅谷的seed round company

Founder 前不会写code
YC逼它们去写code

然后就写API

你要知道一个 Rails controller

一万行

你说那什么概念吗

我们平常Rails controller了
200行就该骂人的

就应该要拆

一个一万行

就我那个月的工作

是把这1万行拆成30只controller

我都他妈要发疯了

这个是在一般正常RD Team不可想象

一边做就一边骂就是说这founder都没规划

说他们都没想清楚

想到什么就先加什么

想要什么就加什么

骂死他了

问题是我自己创业的时候

当然就是想加

想到什么就加什么

因为那客户这个demand他妈太大了

你只能这样子搞所有东西

你就只能workround

所以RD会想说我

一切规划完美执行上线
这件事情不可存在的

我跟你说

要是这件事情存在
有一个第一

他就会大写特写blog

就是我如何planning

仔细planning service并且上线的

然后他就大讲特讲

但没有一个
这blog出现

这就表示仔细 planning
这件事情是不存在的

然后第二个更夸张的就是说

现在不是流行微服务 service

Micro service

这不是我

不是我例子

我朋友例子

Micro service

但是然后因为像我们OTCBTC

就是一个monolith

就是一整包的Ｒails

然后大家听了就觉得很震惊

就想说你为什么不scaling

你为什么不拆service

那我就跟他说他妈没时间

其实每次有人问我这件事情

面试问我这件事我不爽

我就讲你妈懂什么

好

不是我傲慢喔

我跟你说我有看过人家一开始

创业就写就是微服务的

然后服务死掉了

你知道为什么

之前我在心声大学那讲课的时候

然后他们底层都用micro service

就互相呼叫

虽然拆得很小

然后觉得有办法维护

然后又轻便

我跟你讲这都假的

如果你叠在一起

你叠在一起
你叠在一起还是一个大的

重点是每个service是互相服务

它都有overhead的

然后所以一旦流量一进来的时候

你不知道瓶颈在哪里

所以你想要pre-scale

结果反而就是被搞死

因为如果是一个Framework

你大概可以google知道说

哪边瓶颈最大

然后你要benchmark

可以是针对整个一整个Framework

但是你是一个micro service

你要debug

因为你的micro service

只是按照你的假想去拆的

根本不是因为你的service的瓶颈

去拆的

所以反而就搞死你

在知识付费的风口上

然后他们的服务就因为迟迟没有办法

Scale 就没有人要用

因为直播最重要的是

就不能出包吗

请的名师每个人都是

千人在线万人在线

你没有办法解决直播会断的这个问题

就基本上没有人用

这就是很致命的问题

所以重点都不是你的架构怎么样搞

你想pre-scale但是你的pre-scale

这是反而会真的害死你

因为就变的就是无法debug

反而是你之前写的一大包上去

没有办法scale了就加机器

加机器是最快的

这是我听到经典的典型的微服务

我看RD都非常热衷于这种Engineering

我不是反 RD

我以前是RD

而且我还练到非常高级

我只是说我都被这些观念

我自己被这个观念也害得要死

所以我现在听到这些字后
都呵呵

我就觉得你不知道你自己在说什么

再来第三个冤枉路
就是完整的流程

完整的流程

我看到就很多偏执狂
也是想说

这个产品
它看到就是产品上线

别人的服务

上线

然后他就觉得这个漏了那个也漏的

然后就觉得别人服务做的不好

公司就觉得这个漏了

漏了

然后漏了做不好

所以他就觉得这一定是

当初规划没有完美

然后我们因为规划没有完美

所以当时规划的这些问题

然后导致没有收入

后来看到别人有出这些功能

一定是我们当时没有想到

之后在做新service的时候

我们就想要规划更没完美

这个倒果为因

我跟你说

如果你的服务没有你要用

不是你功能写的不完善

是没有人要用

我跟你说

就是没有人要用

有几个问题

就是第一个你可能切不到痛点

第二个就是

你隔壁的虽然bug很多

但是你没有比他好十倍

人家没有动机

要来你你这里玩

所以不是code没规划完善的问题

是其他的问题

创业最贵的其实就是时间

然后你把完整的spec

写出来

你时间也用光了

就像我觉得创业就像这样子

你出发你觉得前面道路是一直线

然后你自己估50天
可以走到目的地

然后所以你在路上走

你就规划你要买什么
就是住什么旅馆

然后订什么餐厅

你就规划的满满的

你甚至出发前也花了很多时间

就是去补粮食

然后去划那个图

但真正上路的时候就会跟你

长途旅行一样的时候很不爽

你要发现什么事情都在出包

然后你好像永远走不到你的目的地

这中间就被人家干死

然后如果你一直要维持你当初 plan

就会很痛苦

我后来意识到
创业根本不是这样

创业

就是你要保证你的路上
别死掉就好了

然后到最后到不到目的地
都不是重点

重点是你有没有 enjoy

你这当中学习到了什么

真的很多人就是Over Engineering

你准备的太多

然后时间没到 钱烧完

花了太久的时间

只在一个小镇去打转

然后或者在里面遇到

没有做一些意外的
预先的小的保险

然后就会死掉了

在我上一个talk里面

我有讲到workaround

然后workaround

我们都用一些很dirty的workaround
比如说我们就知道万人在线了

我DB没办法做到万人在线怎么办

你不要做到一秒钟万人在线

你就得带他

让他分一分钟分批换

分批几千个人在线那就好了

你只要作一个captcha

然后故意让他没有办法马上冲进来

这也是一个解法

所以这种手段

就在于你要解决这个问题

然后不惜一切奇怪的手段

就像前面有石头挡路

RD最会做的就是说看着石头

我们就想说要用切割机

然后我要算力学原理什么之类的

然后我就想想办法

路上挡过去

我一定要花用完美的方法解决东西

你知道我会怎么做吗

我就走别条路就好了

更暴力一点

他一定要走这条路

他妈就弄个炸弹把石头炸掉

不然我就加一个弹簧床跳上去

重点就是过去
重点不是那个方法

我觉得
只要花你超过三天的方法

就是蠢方法

你创业没有办法planing

一个月以后的事情只能

planing三天之后的事情

而且最重要是
我在这几个东西

我不写code

你知道我当时做OTCBTC千一

那个活动

我们做什么做千一

我就他妈写了一个公告而已

就说就说你只要成交超过就是

2000块钱的超过五笔的话

我就送你一个永久千一移资格

然后我的同事就很紧张

说老板你没有写兑换

那兑换后台
会被骂怎么办

我跟他说

我不做这件事情

明天就死掉

你还问我他妈code在哪里

所以我就公告贴出去

贴出去

就是viral

大家都是狂刷

然后然后因为我们db都有记录

然后人家就问怎么办

然后我就晚上花了

我花了两天的时间把那后台写出来

但效果已经出去了

重点是你如果在那没人玩的

时间

然后没有把注意力留住

就没人跟你玩了

重点都不是那个code

重点都不是那个code

所以一些人RD就会很不习惯

为什么做产品是没有spec的

然后充满了workaround

我讲这些

不好意思

刚刚那个电话

刚刚讲到了

我刚刚讲到我这些做法

都是这些政治不正确的做法

有继续在录

吓死我了
政治不正确的做法

有一些RD很难

很难接受这些事实

但是这才是做产品

真正残酷面对的事情

你所有遇到的挑战都是都是dynamic

dynamic你是没有办法

你是都没办法Plan的

我就也真的 所有人都花了很多

时间去忘掉这件事情

但我们公司比较少这个问题

因为我最新的这批 RD

以前不会写code

以前不会写code
就不知道什么是正确的

太棒了

第四个就是钱从哪里来

我的创业后最我觉得最大误区就是说

你要创业

然后很多人是为了创业去创业

他就觉得创业可以赚到很多钱

是老板给我的薪水
低估我的身价

好

所以你看他赚那么多钱

所以我就要做一个metoo

去跟他做一样的事情

干死它

然后但问题说你创业
又没有钱

所以你就去接案

这个完全是一个错误的开始

为什么呢

错误的开始就是说你根本不知道赚钱

就是你根本不知道如何

创造自己的价值

创业这一个真的好的题目
就是你知道

钱怎么来

你知道钱怎么来

或者是你知道怎么人怎么样

就是人怎么样来

那接按我觉得是最可怕的一点

最可怕一点就是你好像有现金流

但是其实你是在贩卖你的时间

赚取金钱

你的金钱只能卖一遍

然后接案是一个挺痛苦的流程

就是接案的时候

就算你做一百分

你的业主也只会觉得你60分

你做120分

他觉得这刚好在他心目中

就是80分而已

重点是你做60分80分

他会觉得你是做20分

接案有淡季

淡季有旺季

那员工看你旺季很赚钱

淡季不赚钱

但他就觉得老板赚那么多钱

怎么都没有分我

那很多人也不喜欢

说自己做产品
反复在做

不同的新产品

他会觉得没有跟着产品共同成长

然后所以你刚train好他就走了

流失率很大

你等于只是帮人家在代 train RD

你自己公司并没有留下来

这个东西

我觉得与其这样

你还不如继续上班就好了

有一个理论

就是把你创业没有赚超过

以前薪资的三倍

根本是赔钱的一件事情

我建议是创业是
你知道自己做确定要

做什么再出来做

要是你没有钱开始

那你就借钱

千万不要接案

因为接案其实那个钱

跟时间是不够你用的

那你的产品就会做mediocre

然后等你做出来之后

风口也过了

这是这是最不好的一件事情

所以我完全不会建议

就是你去接案

第五个就是说创业怎么样

挑IDEAea

然后有些人有些人就是瞧不起

风口上的猪

他就觉得隔壁有什么牛B

你还不是遇到风口
风口上的猪

然后你看他看我也是风口上的猪

我又胖
我又飞在风口

所以我是风口上的猪

根本没什么厉害的

我跟你说

能在风口上飞的他妈都不是猪好吗

就是你要真的牛逼你才能飞的这样

风口里面被干死他妈一大堆

然后呢

我在因为我之前完全没玩过风口

然后我这次都创业都非飞在风口上

我第一次在风口中央的时候进去

第二个在风口前

第三个我自己在风口还没打开的时候

嗅到那个压力很大
就是上去

有人就说我怎么这么厉害

会想到这IDEA

我跟你说我都没有想过这IDEA

我讲个经典笑话就

大概三四年前遇到一个创业家

然后他有很有钱

然后请我帮他找RD

那我就说跟你学赚钱

你创业你怎么会想到做这个IDEA

Brillant ide

都没有想过

你们做起来

他就跟我说

干 你知道我根本不想做这个

当时意料之外的

我更不喜欢这行业

做这个行业
这不是我真的热爱

的这东西

虽然这很赚钱

但是我就很纠结

他妈也很累

你不要以为这我现在很有钱

然后其实他妈超痛苦

我就想说你他妈讲什么干话

不跟我讲就算了

你还跟我说你不喜欢

这service
你做这个也是无心插柳

我后来去问我很多创业家朋友

他们都跟一样都跟我讲干话

我就很生气

后来你看我现在做风口

然后这个生意还赚不少钱

然后人家就跟我讲

问问我秘诀

然后就我我就跟他们讲

我讲一样的干活

你要说我真的梦想是作为一个

SaaS服务

就像是slack那样scale赚大钱

他妈好不好

你知道我要去教书

你以为教书当时是我希望的吗

没有

你以为我要做icoinfo

然后还有做OTCBC

那是我从小的愿望吗

操怎么可能

这个就是这个
完全不是之前我想做的

但是时候到做一下
乓 就爆红

然后爆红

就搞到我的生命里面就只有币所
你要知道我很痛苦

我是一个教育家OK？
教育家做币所

你知道是他妈超痛苦了

重点在于IDEA都不是

你想的IDEA

有人就会说ＲＤ怎么样创业

我觉得RD以后要做你热爱的事情

热爱的事情

然后你才有办法就是怎么说

擅长的事情

然后才有办法真的写service

那我在2012年年前

人家就跟我讲这件事情

但我就觉得这件事这东西屁话

我说我热爱写code

热爱写code

你知道热爱写code
我会干嘛

就像我前几天讲的

他创业会去写 project management 软体

你不要以为我没干过这种蠢事

我真的有写一个
但是最后没上线

project management 软体

所以重点是我之前当RD的时候是

没有人生的

没有人生怎么办
就去找人生了

我后来真的赚钱的是从

开Rails补习班开始

应当是我另外一个人生

因为就是我写code很厉害

然后我就教别人家写code

然后我后来就擅长教教写code

教学这些东西

然后就研究

然后突然间他又变我的热诚

然后我就做这种事情很热忱

我就会写code自动化

就有办法 scale

就有办法 scale上去

这就是我新的人生

之前我做什么都做什么都起不来

因为根本没有人生啊

RD的世界是一个很单一的世界

然后怎么想

我觉得以前思考很单一

很单纯

甚至很薄弱

很狭隘

很可笑

就像我现在有时候会觉得他们很狭隘

一样

以前我也是一样啦

但是这世界是你要赚钱贡献社会价值

是你要engage这个人生

大家在ＲＤ界里面觉得很好笑

其实都是人生

很脏的那都是人生or并不是干净的

也是我找到新的人生

后来为什么去做币所

因为别人在玩币
我看别人玩币会赚钱

那我就我就玩币

然后玩很凶

每天都要看行情

就是写搬砖软件

然后投ICO

就写一个投ICO Service

然后就是买了一大堆币要换钱

我就写OTCBTC Service

然后就这样赚到钱

这就是我的人生

所以这些都是意外

你不要想说是 planning

重点是你想要解决那个问题

不是说你写code

然后看别人在做什么

然后你clone 他

你有的是automated

但是你不知道那些business

那做的都没用

这是第五个

第五个你做创业要做风口

风口就是现在社会压力很大

但是没有跟上的没有跟上

创业一定要做风口

这会牵扯到我等一下要讲的下个题目

天使

很多人做创业

然后觉得外面没有人要用

然后如果去找人家pitch

然后VC就问你财报

然后或者说未来规划

然后就想要干涉你

所以大家觉得很烦

我创业一定要做找天使

好

然后但是你花时间跟很多

天使投资人谈

然后但是也没人要投你

然后我就觉得大家

也是挺天真的

起码我觉得在台湾很少真的天使

我是说天使投资人不是

天使

大家都讲天使就是给你钱

然后不管你善心要资助你的

根本不是这样

天使投资就是
投资的一种

天使投资意思就是
说他投早期

那超容易失败的

Project

然后他投一百间

然后有一间成功

然后那一间成功
帮他赚了一千倍

然后所以他就赚四倍

是这样

然后A轮B轮C轮赔率就有点像是赌

有点像是玩俄罗斯轮盘一样

然后一百格这样子

比如说A轮B轮C轮他就是比较小格

比如说你到最后完IPO或者D轮

就是赌大小而已

赌大小比较容易

比较有容易

就是俄罗斯轮盘

所以俄罗斯轮盘

然后他那怎么样赢

他就买一百格

就是这样

他不太 care 那里面怎样 micro manage

然后所以他投就是会投风口

你要拿钱的话

你就一定要打风口

很多人反而不是这样

他就做一个不是风口的东西

也没有人用

然后他就想要做他自己的

然后再想说为什么没人投我
废话

你就做一个不是风口的东西

然后甚至是一个艺术品

只有自己欣赏

价值产品跟艺术品不一样

艺术品自己欣赏

自己爽就好

你可以爱自己

欣赏就自己欣赏

但是产品是要有人用的

那天使也不是天使

它就不是慈善

它只是另外一种的赚钱这个方式

VC 世界其实

那个世界也是人吃人的

大家都搞错了

所以如果你要创业之道

比较正确的道路

我建议你反而就是说

从天使投资的逻辑或者投资的逻辑

你去看

你反而会知道做什么东西才是

做什么东西才是有人会投钱

有办法scale的

在这世界上

以前没有那么多人竞争

因为基础建设不太好

你会写code就会有traction

但问题是现在写code就是普及了

然后做网站的成本也变得比较低的

然后资本市场就很成熟

大家都在用钱玩的时候你没有拿到钱

没有用钱玩

那这件事情就你就
不太会很会成功

我之前当年做logdown这个就是

天使

然后当年第是天使的迷失

所以现在最近也有人找我做天使投资

我看了一下

我就觉得觉得他们就说他们

要做台湾本地的市场

我就觉得这个是可以做

这是欧美比较大的市场

那么他要坚持在台湾站稳

然后才去世界

我就心里就想说

你这一有traction就被人家抄走了

再来就是你完全可以做scale

天使投资应该是说

不是一就是一千

不是零就是一千

那你要做三的

我没有兴趣花那么大的风险

然后去赌三的这个东西

台湾exist plan你要资本要出场

很困难

所以我就完全搞不懂他们干嘛

最后也没有投

但是我觉得如果你是创业募资

你要搞清楚这一点

就是怎么样融钱

怎么样融钱
资本结构是这样子的

否则否则你会一直碰壁

或是陷在这个回圈是很理所当然的

第七个就是说

不是风口 族群又错

当然以前我就写一个logdowen

而且就那时候2013年的时候

很轰动

当时写的很好

但是付费 付费用户就没很多

那也是scale不起来

你知道为什么吗

就是一个月五块钱美金

很多人就跟我说他觉得贵

然后他觉得想要去heroku以后我们那

时候一个月也五块7块美金

他觉得不如放在那里

放在那里就好了

那问题是我写了一个great service

就没有人愿意付钱

然后这个族群盈niche也很小

然后重点是它频率也很低

你也想大家多久写一次blog

可能像我比较勤劳

一个月可能写三四篇

别人可以一个月写一篇

然后他就觉得他花五块钱

这钱就是很冤枉

你就想这个有解决问题

但这个问题不是问题

这就是为什么所有的blog service

都赚不到钱

不是刚需

这个也不是频次
大家也不愿意付钱

那他也不是风口

而且我是名人

那我名人弄出来的Pageview

那也不是风口

那是假风口

那是假风口

所以你就做了一个好的产品

但是没有distribution能力

也没有现金流

那就是完全的一个经典

就只会有ＲＤ会干这种事情

做一个我觉得我我有需求

别人一定会有需求

放屁

在 blitzscaling

里面就特别讲了

就是说你在做一个东西的时候

你说不止并第一件事情
当然是你要做

一个会product market fit的产品

第二个你还是要看就是说distribution

你打的这市场有多大

在就是说看

Continues operation

毛利频次这些要要够高 user 要够高

然后你要导这个 channel

这个是经典犯的错误

反正我跟你说

我刚才我在讲嘲笑别人的

不是嘲笑别人

是嘲笑过去的自己
你们想的理所当然

的事情有什么

有时候人家说我都在博客上面很狂妄

说呛别人

我讲那些东西
我其实比较好心

我跟你说

那些我讲的每一个我自己本人都踩过

好吗

我真的每一个都踩过

我说不是我幸运
是你打太多关了

你玩这个游戏一百遍了

你当然知道哪里会死

就像我之前有一阵子很疯狂玩

杏林也疯狂

在杏林也疯狂里面赚很多钱

我玩30遍了

我当然知道怎么盖

我现在创业我也玩很多遍

我当然知道怎么搞

我说那些人可笑的

那些IDEA我不是在嘲笑
很可惜

那是我以前死在那里

我当然好心跟你说那个地方

过去会死

然后 干 你们都

但是那些人都会呛我

就说你他妈懂什么

你不是不会cod？
我就讲好 

算了 你想怎么样就怎么样

然后第八个就是价值观

我创业的时候还有遇到一个

经典的这个问题

就是你找人要不要

Focus 在价值观

不要讲价值观这个东西

讲了就是得罪很多人

想怎么样讲
都不太会得罪很多人

就是以前我们hire人的时候

你就会觉得有能力
进来会写够就好

然后或者谁很强进来就好

然后但是问题就是说你进来之后

它磨合就会有很多问题

要么你这个人就不喜欢

然后他一直干队友

然后你一直干他

然后不然就是说他要走的这个方向

你说往北方走

然后他跑到南边龟起来

他就说我是给大队防御

但问题我们要冲

然后还有就是说他一个狙击手

他拿狙击枪跑到前面

然后当冲锋枪在玩

把怪引过来

然后有时候网创业就遇到一大堆

着这些东西

我以前创业遇到一大堆

然后
后来我就真的火了

火了

然后我就在中国做service的时候

因为就是我新的team都是全栈营同学

全栈营同学

我们价值观都是一致

然后所以我们雇佣人其实也比较slow

然后这个 team 就很好

大家都知道怎么样

怎么样补位

所以我们战力就非常强

大家都知道自己站在哪边

但我后来回台湾的时候

又犯了一个错误

我想说客服
请客服没有那么注重

价值观也没关系

结果都是

到最后添的就是很多的trouble

我才意识到这个价值观

这件事情是所有的问题

是不能妥协的

价值观就是你说你为什么想要

在这间公司

然后你然后你做人处事的基本原则

你自己做人处事的

原则

然后遇到紧急的事情

日常时会怎么样

跟你相处

当价值观不相容的时候就会产生矛盾

甚至就会去伤害别伤害别人

那这件事情是完全不能妥协的

就是你可以接受价值观一样

但做事情比较慢

因为他们会成长

然后坦白说像我的同事

现在当年的全栈营的同学

现在有人做产品速度都超级快的

然后UI超级好的

风控超级仔细的
文案写得比我好不好

tmd每个都比我强

然后重点是他们就又补位的就非常好

我们公司基本没内斗的

就是中国team基本没内斗

你觉得很震撼

那样这样子打这个速度才会够快

那我就是去硅谷

决定就是按照CS138B

还有airbnb讲的文化价值观去

招人的时候

我们才发现原来是hire

有人是价值观是没有办法妥协的

然后第九就是

User Story

又说是User Story

大家在 不用瀑布式开发

就用 agile 式开发的时候
就会写User Story

所以我强调不写规格

但User Story里就有一个问题

就是User Story是RD写的

RD有时候就会自high

然后就写了一大堆User Story

不是sales部门要的

他是自己觉得需要

然后就很开心的就做下去

结果到最后原先sales 部门要的

或是 customer support写的这个东西

他就没做

而且还有就是说

User Story里有MoScow法

Must have

然后should have

然后nice to have 这一大堆

我们要怎么样评级

有人就最喜欢问我这个问题

我跟你说

创业公司should have都不太应该做

你就只应该要写must have

全部的User Story

你做 must have不就好了

should have都跟nice to have

到最后我们都被证明

should have同常都是第二阶段才需要做

事实被证明第二阶段才需要做

也就是你有营收以后才需要做

因为没有人付钱给你

should have都不应该出现

Nice to have 就是你的妄想

所以我们做User story的时候其实是

只写must have

而且这个must have还写在

这是问卷调查使用者直接跟我讲

而不是我自己妄想的

所以User story大家

agile看到一堆人就是玩scrum

玩agile玩得开心

大家写User story

还在那比 scrum point

然后大家比权重分数我就觉得好好笑

你们就好像拿一堆

你们根本不知道的 feature

然后在那边比point 的

我看到就觉得呵呵呵

真实的世界根本不是那样好吗

我这样讲要得罪一大堆

那个scrum派的

没有
我之前以前也觉得scrum很牛逼

我想学

直到我玩游戏

用这个玩法根本不能打

因为这不是现实生活中的打法

根～本～不是～OK？

好

然后第十个就是

说产品一定要做得很好

这是我这次做产品的一个经典错误

那个PG害死我

Paul Graham就说那个产品最重要

Product Market fit最重要

硅谷一大堆

都是冲着要打磨这个产品

我看blitzscaling的时候就意识到那

问题出在哪里

因为我们就是被火币打下江山

打下一部分的市场

那问题在哪里

我distribution比较弱

我们mobile Team速度不够

Hiring不够快

迭代就是不够不够快

但是现在一旦一大半的市场都被mobie

就是吃满

然后我们是靠viral, organic viral

下去打

然后面对人家资本在里面海量玩

然后我们的distribution就输

所以我后来看硅谷最新一期

最新的Growth Hack

他现再也跟你讲 Product market fit

这些东西

Product loop这些不重要

重点是你的distribution

所以你一 Product market fit

重点都不是AARRR这件事情

是直接如何在你的产品里面制造入口

Viral Loop

然后把你的channel就直接占满

这才是真的血腥

现在的打法跟AARRR已经就是无关了

所以我觉得这个是最大的迷失

很多RD听到Growth hack 就自high

我最讨厌这件事情

就很多人觉得Growth hack就是看

数据

我就跟他

我就觉得放屁也不是说放屁

他还是有一定的道理

这问题是你生意不好

不是metrix可以看出来

那是你demand的东西

你demand的你就是poor data poor user

你在那边测测也没毛用

重点是你的转换率

你有没有办法形成这个loop

但RD就会非常执着的

他不去直接接触人群

而是躲在背后里面就说他要做实验

我觉得这是一个很irresponsible

做法

我甚至认为其实我们公司比较奇葩

我们公司每个RD都懂业务都懂炒币

那是为什么这样子
你才能写出最市场

上面最贴近的这些功能

你做功能

你应该是按照user 的feedback

然后数据只是帮你找

转化率在某一程度直接drop掉

但是不是没有traction

traction不应该靠你的data analysis

提供给你

我也觉得这是经典的错误

很多人一进来就说他想要埋点

然后埋点之后知道怎么样改善

我就觉得他妈都放屁

重点都不是在这

重点是你distribution

没做起来这样子

然后第12个是说什么

脚踏车机机车跑车的理论

很多人觉得产品就是

RD 都觉得产品是1.0

1.1

1.2上去

不是

是1.0

直接跳2.0之间跳6.0

为什么

创业

其实把全部的客户扔掉

但我们客户也没有扔掉

但是我们的很多设计

我们之前的机制其实都是重新都是

Reinvent

也就是说在当时只做适当的事情

然后之后再重写

然后有钱了之后hire

很牛B的人

比如说我们整套deploy流程就扔掉

整个重写

我们原本风控是一条一条逐一加上

规则

到时候最后重写整个风控系统

然后申诉系统整个都是都是重写

我们当时就以前在还没做这么大设计

的时候就非常羡慕说为什么

别人的风控系统这么nb

就想说我们自己能不能凭空干一个

系统

我们自己现在风控系统非常严密是

然后各项东西都有log

然后permission

然后风控 alert 这些乱七八糟的这些东西

Behavior analysis

这些东西都是后来才按需要

有人就想说要怎么样pre-architecture

为什么没有办法pre-architecture

因为你就没有量

有人就说他改版的1.1我就想到1.1

就是没有量

我跟你说就是真的你做到traction

你不如扔掉好再搞一个

因为你真的有去traction那量大进来

那是逼着你去做你下一步要做的事情

然后就是这样迭代出来

就是迭代出来一下子大跃进大跃进

真的活着的start up是这样子

都不是妄想

所以因为RD是product market fit后

为了scale进来的

所以它的盲点他的盲点是以他的角度

他是看不到这些的这个东西

最终然后最讨厌时候

这些RD还很非常自大

在讲我
以前就很知道自大

反正他们就会觉得我他自己才讲的话

才是真的话

他自己很牛B

为什么事情不可能是像他想象的

这样

但我跟你讲事情就不是他想象的这样

事情就讲这样

我觉得是RD这个职业有点被

Over rated

因为RD现在是非常稀有说

所以说工种非常稀有

薪水就非常高

薪水非常高

他就觉得他是自己是最牛逼的

但是不是这个公司或是大家是一起做

起来

并不是RD是多高等

而是这是真的

Service 的 builder
所有你的

Growth 和 engineering 都必须按照

这个业务

然后增长的方向去做好

并不是说你的rank比较高

或是你的技术比较厉害

那就是真的

但这是第二点方面是听你的意见

但是并不是说说产品

就是RD学问越高

我后来又发现RD学问越高

会做出来那个产品

就会越那个
他需要一定的遗忘过程

像我也是想我2012年创业

我2012年Rails的时候已经很强了

我花了六年的时间

逐渐把我过去的engineering内容都忘掉

我是很努力的在忘掉

然后

所以今天才可以站在这里

这个我这六年来走到了冤枉路

真的每一个都是冤枉的

然后今天的直播就到这里

这就是我创业会遇到的冤枉路

所有你在当工程师的时候觉得

理所当然的决策

线性的决策

在创业这条路上都是错的

100%都是错的

没有一条对的

好

谢谢大家

然后我看一下那个问题今天有没有

问题

我爸又在cue了

有人说我越来越帅

要感谢我的理发师 josh

昨天结婚的josh

她帮我剪的头发真的厉害
